function add(x,y){
    return x + y;
}
undefined
add(true , false)
1
add("Amit", " Srivastava");
'Amit Srivastava'
add(10,20);
30
add(10,"30");
'1030'
add([10,20],[90,100]);
'10,2090,100'
add(10, undefined);
NaN
Array;
ƒ Array() { [native code] }
typeof Array;
'function'
Array.prototype;
[constructor: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, find: ƒ, …]at: ƒ at()concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()findLast: ƒ findLast()findLastIndex: ƒ findLastIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}[[Prototype]]: Object
var q = [10,20,30,40,50];
undefined
typeof q;
'object'
q instanceof Array;
true
typeof Array;
'function'
Array.prototype;
[constructor: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, find: ƒ, …]
var w = "Hello";
undefined
var w2 = new String("hello");
undefined
typeof w;
'string'
typeof w2;
'object'
var f = [10,20,30];
undefined
typeof f;
'object'
var w3 = new Array(100);
undefined
w3;
(100) [empty × 100]
w2;
String {'hello'}
w;
'Hello'
w + 100;
'Hello100'
w2 + 100;
'hello100'
w;
'Hello'
w2;
String {'hello'}
var a =100;
undefined
typeof a;
'number'
a.toString();
'100'
a;
100
var ww = new Number(100);
undefined
typeof ww;
'object'
