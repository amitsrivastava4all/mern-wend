var arr = [10,20,30,40]
undefined
arr.push(1000);
5
arr.unshift(2000);
6
arr;
(6) [2000, 10, 20, 30, 40, 1000]0: 20001: 102: 203: 304: 405: 1000length: 6[[Prototype]]: Array(0)
arr.splice(2,0,9999);
[]
arr;
(7) [2000, 10, 9999, 20, 30, 40, 1000]
Array.prototype.insert = function(index, value){
    this.splice(index,0,value);
    return this.length;
}
ƒ (index, value){
    this.splice(index,0,value);
    return this.length;
}
Array.prototype;
[insert: ƒ, constructor: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, …]insert: ƒ (index, value)at: ƒ at()concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()findLast: ƒ findLast()findLastIndex: ƒ findLastIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}[[Prototype]]: Object
arr.insert(1,8888);
8
arr;
(8) [2000, 8888, 10, 9999, 20, 30, 40, 1000]
